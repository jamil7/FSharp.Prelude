<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <PackageId>FSharp.Prelude</PackageId>
        <Authors>Jamil Maqdis Anton</Authors>
        <PackageDescription>Extensions, error handling, and dependency injection in a functional way</PackageDescription>
        <RepositoryType>git</RepositoryType>
        <RepositoryUrl>https://github.com/jamil7/FSharp.Prelude</RepositoryUrl>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageTags>F#; Async; Result; Option; AsyncResult; AsyncOption</PackageTags>
        <OtherFlags>$(OtherFlags) --warnon:1182</OtherFlags>
    </PropertyGroup>

    <ItemGroup>
        <Compile Include="Extensions\Prelude.fs" />
        <Compile Include="Extensions\List.fs" />
        <Compile Include="Extensions\Option.fs" />
        <Compile Include="Extensions\Async.fs" />
        <Compile Include="Extensions\Task.fs" />
        <Compile Include="Extensions\Result.fs" />
        <Compile Include="Extensions\String.fs" />
        <Compile Include="ErrorHandling\AsyncResult.fs" />
        <Compile Include="ErrorHandling\AsyncOption.fs" />
        <Compile Include="ErrorHandling\AsyncResultOption.fs" />
        <Compile Include="ErrorHandling\TaskResult.fs" />
        <Compile Include="ErrorHandling\TaskOption.fs" />
        <Compile Include="FDI\Reader.fs" />
        <Compile Include="FDI\ReaderResult.fs" />
        <Compile Include="FDI\ReaderAsyncResult.fs" />
    </ItemGroup>

</Project>
